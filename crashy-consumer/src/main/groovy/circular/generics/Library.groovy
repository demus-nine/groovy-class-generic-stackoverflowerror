/*
 * This Groovy source file was generated by the Gradle 'init' task.
 */
package circular.generics

import generics.ExtendedSimplest
import generics.AllAtOnce

class Library {

    AllAtOnce findOrCreateTheProblematicClass(ExtendedSimplest extendedSimplest, String anId, String aCategory) {
        // The compiler crashes with StackoverflowError when entering the closure, because it can't resolve the generic parameter in AllAtOnce
        AllAtOnce problemClass = retryIfDuplicateKey { ->
            AllAtOnce.findSpecificType(aCategory).testMethod(extendedSimplest, anId)
        } as AllAtOnce

        return problemClass
    }

    static <T> T retryIfDuplicateKey(Closure<T> statement) {
        def result
        try {
            result = statement()
        } catch (Exception e) {
            result = statement()
        }
        return result
    }

}
